# Get common recipes
recipes = ENV['fsa'] + '/PlotTools/rake/recipes.rake'
import recipes

require ENV['CMSSW_BASE'] + '/src/FinalStateAnalysis/PlotTools/rake/tools.rb'
require 'pathname'

$jobid = ENV['jobid']
$blind = ENV['blind']

# Figure out what run period we are in
$period = '13TeV'
PU = ENV['PU']
#if $jobid.include? '8TeV'
#$period = '8TeV'
#end

################################################################################
## Sample names ################################################################
################################################################################
#
# Get sample names containing a substring
def get_sample_names(substring)
  inputs = Dir.glob("inputs/#{$jobid}/*.txt").select {|x| x.include? substring}
  inputs = inputs.map{|x| File.basename(x).sub(".txt", "")}
  return inputs
end
#

samples = Hash[
		"eraB_m" => get_sample_names('data_SingleMuon_Run2017B-09Aug2019'),
                "eraC_m" => get_sample_names('data_SingleMuon_Run2017C-09Aug2019'),
                "eraD_m" => get_sample_names('data_SingleMuon_Run2017D-09Aug2019'),
                "eraE_m" => get_sample_names('data_SingleMuon_Run2017E-09Aug2019'),
                "eraF_m" => get_sample_names('data_SingleMuon_Run2017F-09Aug2019'),
                "DY" => get_sample_names('DYJetsToLL_M-50_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "DY1" => get_sample_names('DY1JetsToLL_M-50_MatchEWPDG20_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "DY2" => get_sample_names('DY2JetsToLL_M-50_MatchEWPDG20_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "DY3" => get_sample_names('DY3JetsToLL_M-50_MatchEWPDG20_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "DY4" => get_sample_names('DY4JetsToLL_M-50_MatchEWPDG20_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "DY10" => get_sample_names('DYJetsToLL_M-10to50_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v2'),
                "W" => get_sample_names('WJetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "W1" => get_sample_names('W1JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "W2" => get_sample_names('W2JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "W3" => get_sample_names('W3JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "W4" => get_sample_names('W4JetsToLNu_TuneCP5_13TeV-madgraphMLM-pythia8_-106X_mc2017_realistic_v6-v1'),
                "WW" => get_sample_names('WW_TuneCP5_13TeV-pythia8_-106X_mc2017_realistic_v6-v2'),
                "WZ" => get_sample_names('WZ_TuneCP5_13TeV-pythia8_-106X_mc2017_realistic_v6-v2'),
                "ZZ" => get_sample_names('ZZ_TuneCP5_13TeV-pythia8_-106X_mc2017_realistic_v6-v2'),
                "TTTo2L2Nu" => get_sample_names('TTTo2L2Nu_TuneCP5_13TeV-powheg-pythia8_-106X_mc2017_realistic_v6-v2'),
                "TTToHadronic" => get_sample_names('TTToHadronic_TuneCP5_13TeV-powheg-pythia8_-106X_mc2017_realistic_v6-v2'),
                "TTToSemiLeptonic" => get_sample_names('TTToSemiLeptonic_TuneCP5_13TeV-powheg-pythia8_-106X_mc2017_realistic_v6-v2')
]

# Function to get the .root files for an analyzer and samples
def get_analyzer_results(analyzer, the_samples)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
  the_samples.each do |sample|
    output << "results/#{$jobid}/#{analyzer_base}/#{sample}.root"
  end
  return output
end
def get_plotter_results(analyzer)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
end
#task :EMY => get_analyzer_results("AnalyzeEMYield.py", samples['WW'])
#task :EMY => get_analyzer_results("AnalyzeEMYield.py", samples['TTTo2L2Nu'] + samples['TTToHadronic'] + samples['TTToSemiLeptonic'] + samples['WW'] + samples['WZ'] + samples['ZZ'] + samples['DY'] + samples['DY1'] + samples['DY2'] + samples['DY3'] + samples['DY4'] + samples['DY10'] + samples['W'] + samples['W1'] + samples['W2'] + samples['W3'] + samples['W4'])
task :EMY => get_analyzer_results("AnalyzeEMYield.py", samples['eraB_m'] + samples['eraC_m'] + samples['eraD_m'] + samples['eraE_m'] + samples['eraF_m'] + samples['TTTo2L2Nu'] + samples['TTToHadronic'] + samples['TTToSemiLeptonic'] + samples['WW'] + samples['WZ'] + samples['ZZ'] + samples['DY'] + samples['DY1'] + samples['DY2'] + samples['DY3'] + samples['DY4'] + samples['DY10'] + samples['W'] + samples['W1'] + samples['W2'] + samples['W3'] + samples['W4'])

